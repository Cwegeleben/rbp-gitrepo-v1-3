{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Run packager v2 tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Re-run packager v2 tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Re-run packager v2 tests after module mapping fix",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run tests again after simplifying mocks",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run tests after mapper tweak",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run tests after adding explicit mocks",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run tests after mapper path correction",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run tests after removing bad mock",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run packager v2 tests with admin bypass",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run packager v2 tests after adjusting mock paths",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run packager v2 tests after access mocks",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run tests after adding builds package mapping",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Final run of packager v2 tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"packager.v2.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run Storybook (smoke)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"storybook",
				"-p",
				"6007"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run Storybook (smoke)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"storybook",
				"-p",
				"6007"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run tests (smoke)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run unit tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run Shopify CLI dev server (smoke)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"dev:shopify-cli"
			],
			"isBackground": true,
			"group": "build"
		},
		{
			"label": "Run Storybook on 6008 (smoke)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"storybook",
				"-p",
				"6008"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run Storybook after retitling",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"storybook",
				"-p",
				"6008"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run new registry health tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"health.server.test.ts",
				"apps.proxy.modules.health.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Re-run new registry health tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"health.server.test.ts",
				"apps.proxy.modules.health.test.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run full test suite",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run jest after UI changes",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run jest after UI changes",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--"
			]
		},
		{
			"label": "Re-run unit tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test"
			]
		},
		{
			"label": "Run jest after UI changes",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--"
			]
		},
		{
			"label": "Run cart drawer tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"src/modules/rbp-cart/v1.0.0/__tests__"
			],
			"group": "build"
		},
		{
			"label": "Re-run rbp-cart tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"src/modules/rbp-cart/v1.0.0/__tests__"
			],
			"group": "build"
		},
		{
			"label": "Run builds v1.4.0 tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"src/modules/rbp-builds/v1.4.0/__tests__"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run Storybook to validate HistoryBar stories",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"storybook",
				"-p",
				"6007"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run Storybook on 6008 (stories)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"storybook",
				"-p",
				"6008"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run builds v1.4.0 tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"src/modules/rbp-builds/v1.4.0/__tests__"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run builds v1.4.0 tests (2)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"src/modules/rbp-builds/v1.4.0/__tests__"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run builds v1.4.0 tests (3)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"src/modules/rbp-builds/v1.4.0/__tests__"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run jest after Theme Editor diagnostics + GET form tests",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--"
			]
		},
		{
			"label": "Run targeted jest for new admin pages",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"AdminCatalogShell.test.tsx",
				"AdminBuildsPage.test.tsx"
			],
			"isBackground": false,
			"problemMatcher": [
				"$jest-stylish"
			],
			"group": "build"
		},
		{
			"label": "Re-run targeted jest for new admin pages",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"AdminCatalogShell.test.tsx",
				"AdminBuildsPage.test.tsx"
			],
			"isBackground": false,
			"problemMatcher": [
				"$jest-stylish"
			],
			"group": "build"
		},
		{
			"label": "Re-run targeted jest after checkbox fix",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"AdminCatalogShell.test.tsx",
				"AdminBuildsPage.test.tsx"
			],
			"isBackground": false,
			"problemMatcher": [
				"$jest-stylish"
			],
			"group": "build"
		},
		{
			"label": "Re-run targeted jest after live region assertion fix",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"AdminCatalogShell.test.tsx",
				"AdminBuildsPage.test.tsx"
			],
			"isBackground": false,
			"problemMatcher": [
				"$jest-stylish"
			],
			"group": "build"
		},
		{
			"label": "Run test for AdminSettings",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"AdminSettings.test.tsx"
			],
			"isBackground": false,
			"problemMatcher": [
				"$jest-stylish"
			],
			"group": "build"
		},
		{
			"label": "Run preflight shopify-admin-links",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:shopify-admin-links"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run v1-1 preflights",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:shopify-admin-links",
				"&&",
				"pnpm",
				"-s",
				"preflight:no-stub-routes",
				"&&",
				"pnpm",
				"-s",
				"smoke:admin-routes"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run v1-1 preflights",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:no-stub-routes",
				"&&",
				"pnpm",
				"-s",
				"smoke:admin-routes"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run v1-1 preflights (2)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:no-stub-routes",
				"&&",
				"pnpm",
				"-s",
				"smoke:admin-routes"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run no-stub and smoke after deletion",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:no-stub-routes",
				"&&",
				"pnpm",
				"-s",
				"smoke:admin-routes"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run smoke after heuristic tweak",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"smoke:admin-routes"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run preflight:admin-storage",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:admin-storage"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run preflight:admin-storage",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:admin-storage"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run preflight absolute origins",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:no-absolute-origins"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run remix-server-only and cross-app preflights",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:remix-server-only",
				"&&",
				"pnpm",
				"-s",
				"preflight:cross-app-imports"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run remix preflights again",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:remix-server-only",
				"&&",
				"pnpm",
				"-s",
				"preflight:cross-app-imports"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run smoke:staging",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"smoke:staging"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run preflights for cross-app and server-only",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:cross-app-imports",
				"&&",
				"pnpm",
				"-s",
				"preflight:remix-server-only"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run preflights for cross-app and server-only",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:cross-app-imports",
				"&&",
				"pnpm",
				"-s",
				"preflight:remix-server-only"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Final preflight cross-app and server-only",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:cross-app-imports",
				"&&",
				"pnpm",
				"-s",
				"preflight:remix-server-only"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run cross-app preflight after purge",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:cross-app-imports"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run no-jsx-in-ts preflight and build Shopify app",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:no-jsx-in-ts",
				"&&",
				"pnpm",
				"-w",
				"-r",
				"--filter",
				"./src/apps/rbp-shopify-app/rod-builder-pro",
				"build"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run no-jsx-in-ts preflight and build",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:no-jsx-in-ts",
				"&&",
				"pnpm",
				"-w",
				"-r",
				"--filter",
				"./src/apps/rbp-shopify-app/rod-builder-pro",
				"build"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run no-jsx-in-ts preflight and app build (retry)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:no-jsx-in-ts",
				"&&",
				"pnpm",
				"-w",
				"-r",
				"--filter",
				"./src/apps/rbp-shopify-app/rod-builder-pro",
				"build"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Build gateway Docker image (local)",
			"type": "shell",
			"command": "docker",
			"args": [
				"build",
				"-f",
				"src/apps/gateway/api-gateway/Dockerfile",
				"-t",
				"rbp-gateway:test",
				"."
			]
		},
		{
			"label": "Run targeted jest for getDataSource",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--",
				"getDataSource.test.ts"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run jest -t getDataSource",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"-t",
				"getDataSource"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run jest -t getDataSource",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"-t",
				"getDataSource"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run HQ preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:hq"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run HQ preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:hq"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Generate HQ OpenAPI types",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"openapi:hq"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run HQ preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:hq"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run HQ preflight (import check)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:hq"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run HQ preflight after relaxing UI import regex",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:hq"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "HQ smoke: openapi + preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-w",
				"-s",
				"openapi:hq",
				"&&",
				"pnpm",
				"-w",
				"-s",
				"preflight:hq"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run jest after UI changes",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"test",
				"--"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run HQ preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:gateway-healthz"
			],
			"isBackground": false,
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "Run remix preflights again",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:remix-server-only",
				"&&",
				"pnpm",
				"-s",
				"preflight:cross-app-imports"
			]
		},
		{
			"label": "Run preflight absolute origins",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:no-absolute-origins"
			]
		},
		{
			"label": "Run HQ preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:hq"
			]
		},
		{
			"label": "Run preflight:admin-storage",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:admin-storage"
			]
		},
		{
			"label": "Re-run smoke:staging after tolerant assertions",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"smoke:staging"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run preflight:app-proxy-mapping",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"-F",
				"./src/apps/gateway/api-gateway",
				"preflight:app-proxy-mapping"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run gateway preflight:app-proxy-mapping",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"-F",
				"./src/apps/gateway/api-gateway",
				"preflight:app-proxy-mapping"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run tenant dashboard preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:tenant-dashboard"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run preflight storefront builder",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:storefront-builder-m0"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run preflight storefront builder (dynamic import wired)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:storefront-builder-m0"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run preflight storefront builder M1",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:storefront-builder-m1"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run M2 preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:storefront-builder-m2"
			],
			"isBackground": false,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run M3 preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:storefront-builder-m3"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run proxy preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:proxy"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run preflight:admin-dashboard-tenant",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:admin-dashboard-tenant"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run preflight:admin-dashboard-tenant (retry)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:admin-dashboard-tenant"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run progress-ledger audit",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:progress-ledger"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run progress-ledger audit (retry)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:progress-ledger"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run admin-embed-ssr-safe preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:admin-embed-ssr-safe"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run admin-embed-ssr-safe preflight",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:admin-embed-ssr-safe"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Re-run admin-embed-ssr-safe after heuristic tweak",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:admin-embed-ssr-safe"
			],
			"isBackground": false,
			"group": "build"
		},
		{
			"label": "Run admin-embed-ssr-safe preflight (v1.1)",
			"type": "shell",
			"command": "pnpm",
			"args": [
				"-s",
				"preflight:admin-embed-ssr-safe"
			],
			"isBackground": false,
			"group": "build"
		}
	]
}